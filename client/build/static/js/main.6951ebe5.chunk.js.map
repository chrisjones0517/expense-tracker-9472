{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","useContext","total","length","map","amount","reduce","item","toFixed","IncomeExpenses","expenses","income","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAEaA,EAAS,WAClB,OACI,gD,6CCJO,WAACC,EAAOC,GACnB,OAAQA,EAAOC,MACX,IAAK,mBACD,OAAO,2BACAF,GADP,IAEIG,SAAS,EACTC,aAAcH,EAAOI,UAE7B,IAAK,qBACD,OAAO,2BACAL,GADP,IAEII,aAAcJ,EAAMI,aAAaE,QAAO,SAAAC,GAAW,OAAIA,EAAYC,MAAQP,EAAOI,aAE1F,IAAK,kBACD,OAAO,2BACAL,GADP,IAEII,aAAa,GAAD,mBAAMJ,EAAMI,cAAZ,CAA0BH,EAAOI,YAErD,IAAK,oBACD,OAAO,2BACAL,GADP,IAEIS,MAAOR,EAAOI,UAEtB,QACI,OAAOL,I,gBCnBbU,EAAe,CACjBN,aAAc,GACdK,MAAO,KACPN,SAAS,GAIAQ,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBC,qBAAWC,EAAYN,GADL,mBACrCV,EADqC,KAC9BiB,EAD8B,iDAK5C,4BAAAC,EAAA,+EAE0BC,IAAMC,IAAI,wBAFpC,OAEcC,EAFd,OAIQJ,EAAS,CACLf,KAAM,mBACNG,QAASgB,EAAIC,KAAKA,OAN9B,gDAUQL,EAAS,CACLf,KAAM,oBACNG,QAAS,KAAIkB,SAASD,KAAKb,QAZvC,0DAL4C,kEAsB5C,WAAiCe,GAAjC,SAAAN,EAAA,+EAEcC,IAAMM,OAAN,+BAAqCD,IAFnD,OAIQP,EAAS,CACLf,KAAM,qBACNG,QAASmB,IANrB,+CASQP,EAAS,CACLf,KAAM,oBACNG,QAAS,KAAIkB,SAASD,KAAKb,QAXvC,yDAtB4C,kEAuC5C,WAA8BF,GAA9B,iBAAAW,EAAA,6DAEUQ,EAAS,CACXC,QAAS,CACL,eAAgB,qBAJ5B,kBAS0BR,IAAMS,KAAK,uBAAwBrB,EAAamB,GAT1E,OAScL,EATd,OAWQJ,EAAS,CACLf,KAAM,kBACNG,QAASgB,EAAIC,KAAKA,OAb9B,gDAgBQL,EAAS,CACLf,KAAM,oBACNG,QAAS,KAAIkB,SAASD,KAAKb,QAlBvC,0DAvC4C,sBA+D5C,OAAQ,kBAACE,EAAckB,SAAf,CAAwBC,MAAO,CACnC1B,aAAcJ,EAAMI,aACpBK,MAAOT,EAAMS,MACbN,QAASH,EAAMG,QACf4B,gBAnEwC,2CAoExCC,kBApEwC,4CAqExCC,eArEwC,8CAuEvCnB,ICtFF,SAASoB,EAAiBC,GAC7B,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KCGlD,IAAMC,EAAU,WAAO,IAClBlC,EAAiBmC,qBAAW5B,GAA5BP,aAEJoC,EAAQ,EASZ,OAPIpC,EAAaqC,SAEbD,EADUpC,EAAasC,KAAI,SAAAnC,GAAW,OAAIA,EAAYoC,UACtCC,QAAO,SAACJ,EAAOK,GAAR,OAAiBL,EAASK,KAAMC,QAAQ,IAM/D,oCACI,4CACA,gCAAMZ,EAAiBM,MCftBO,EAAiB,WAAO,IACzB3C,EAAiBmC,qBAAW5B,GAA5BP,aACJ4C,EAAW,EACXC,EAAS,EAab,OAXI7C,EAAaqC,SACbQ,EAAS7C,EAAasC,KAAI,SAAAnC,GACtB,OAAIA,EAAYoC,OAAS,EACdpC,EAAYoC,QAEnBK,GAAYzC,EAAYoC,OACjB,MAEZC,QAAO,SAACJ,EAAOK,GAAR,OAAiBL,EAASK,KAAMC,QAAQ,IAIlD,yBAAKI,UAAU,qBACX,6BACI,sCACA,uBAAGA,UAAU,cAAb,IAA4BhB,EAAiBe,KAEjD,6BACI,wCACA,uBAAGC,UAAU,eAAb,IAA6BhB,EAAiBc,OCxBjDG,EAAc,SAAC,GAAqB,IAAnB5C,EAAkB,EAAlBA,YAClByB,EAAsBO,qBAAW5B,GAAjCqB,kBACFoB,EAAO7C,EAAYoC,OAAS,EAAI,IAAM,IAE5C,OACI,wBAAIO,UAAW3C,EAAYoC,OAAS,EAAI,QAAU,QAC7CpC,EAAY8C,KADjB,IACuB,8BAAOD,EAAO,IAAMlB,EAAiBoB,KAAKC,IAAIhD,EAAYoC,UAAgB,4BAAQa,QAAS,kBAAMxB,EAAkBzB,EAAYC,MAAM0C,UAAU,cAArE,OCN5FO,EAAkB,WAAO,IAAD,EACSlB,qBAAW5B,GAA7CP,EADyB,EACzBA,aAAc2B,EADW,EACXA,gBAOtB,OALA2B,qBAAU,WACN3B,MAED,IAGC,oCACI,uCACA,wBAAImB,UAAU,QACT9C,EAAasC,KAAI,SAAAnC,GAAW,OAAK,kBAAC,EAAD,CAAaoD,IAAKpD,EAAYiB,GAAIjB,YAAaA,UCbpFqD,EAAiB,WAAO,IAAD,EACRC,mBAAS,IADD,mBACzBR,EADyB,KACnBS,EADmB,OAEJD,mBAAS,GAFL,mBAEzBlB,EAFyB,KAEjBoB,EAFiB,KAGxB9B,EAAmBM,qBAAW5B,GAA9BsB,eAYR,OACI,oCACI,mDACA,0BAAM+B,SAdG,SAAAC,GACbA,EAAEC,iBACF,IAAMC,EAAiB,CACnB3C,GAAI8B,KAAKc,MAAsB,IAAhBd,KAAKe,UACpBhB,OACAV,QAASA,GAGbV,EAAekC,KAOP,yBAAKjB,UAAU,gBACX,2BAAOoB,QAAQ,QAAf,QACA,2BAAOpE,KAAK,OAAO4B,MAAOuB,EAAMkB,SAAU,SAAAN,GAAC,OAAIH,EAAQG,EAAEO,OAAO1C,QAAQ2C,YAAY,mBAExF,yBAAKvB,UAAU,gBACX,2BAAOoB,QAAQ,UAAf,UACQ,6BADR,2CAIA,2BAAOpE,KAAK,SAAS4B,MAAOa,EAAQ4B,SAAU,SAAAN,GAAC,OAAIF,EAAUE,EAAEO,OAAO1C,QAAQ2C,YAAY,qBAE9F,4BAAQvB,UAAU,OAAlB,sB,MCRDwB,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKxB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCfRyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6951ebe5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload ]\r\n            }\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n// Initial state\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n\r\n    async function getTransactions() {\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id) {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    async function addTransaction(transaction) {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Context-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    let amounts;\r\n    let total = 0;\r\n\r\n    if (transactions.length) {\r\n        amounts = transactions.map(transaction => transaction.amount);\r\n        total = amounts.reduce((total, item) => total += item).toFixed(2);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${numberWithCommas(total)}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    let expenses = 0;\r\n    let income = 0;\r\n\r\n    if (transactions.length) {\r\n        income = transactions.map(transaction => {\r\n            if (transaction.amount > 0) {\r\n                return transaction.amount;\r\n            } else {\r\n                expenses += transaction.amount;\r\n                return 0;\r\n            }\r\n        }).reduce((total, item) => total += item).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">${numberWithCommas(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expenses</h4>\r\n                <p className=\"money minus\">${numberWithCommas(expenses)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span>{sign + '$' + numberWithCommas(Math.abs(transaction.amount))}</span><button onClick={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n\r\n    useEffect(() => {\r\n        getTransactions();\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const { addTransaction } = useContext(GlobalContext);\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        };\r\n\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}